{"version":3,"sources":["Components/SearchBar/SearchBar.js","Components/Track/Track.js","Components/TrackList/TrackList.js","Components/SearchResults/SearchResults.js","Components/Playlist/Playlist.js","util/Spotify.js","Components/App/App.js","reportWebVitals.js","index.js"],"names":["SearchBar","props","state","term","search","bind","handleTermSearch","this","onSearch","e","setState","target","value","className","onChange","placeholder","onClick","React","Component","Track","addTrack","removeTrack","isRemoval","onAdd","track","onRemove","name","artist","album","renderAction","TrackList","tracks","map","id","SearchResults","searchResults","Playlist","handleNameChange","onNameChange","defaultValue","playlistTracks","onSave","accessToken","Spotify","getAccessToken","accessTokenMatch","window","location","href","match","expiresInMatch","expiresIn","Number","setTimeout","history","pushState","accessUrl","fetch","headers","Authorization","then","response","json","jsonResponse","items","artists","uri","savePlaylist","trackUris","length","userId","method","body","JSON","stringify","playlistId","uris","App","playlistName","updatePlaylistName","find","savedTrack","push","filter","currentTrack","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f3edb03.chunk.js","sourcesContent":["import React from 'react';\nimport './SearchBar.css';\n\nclass SearchBar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = { term: '' }\n\n    this.search = this.search.bind(this);\n    this.handleTermSearch = this.handleTermSearch.bind(this);\n  }\n\n  search() {\n    this.props.onSearch(this.state.term);\n  }\n\n  handleTermSearch(e) {\n    this.setState({ term: e.target.value})\n  }\n\n  render() {\n    return (\n      <div className=\"SearchBar\">\n        <input onChange={this.handleTermSearch} placeholder=\"Enter A Song, Album, or Artist\" />\n        <button onClick={this.search} className=\"SearchButton\">SEARCH</button>\n      </div>\n    )\n  }\n}\n\nexport default SearchBar;","import React from 'react';\nimport './Track.css';\n\nclass Track extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n  }\n\n  renderAction() {\n    if (this.props.isRemoval === true) {\n      return <button className=\"Track-action\" onClick={this.removeTrack}>-</button>;\n    } if (this.props.isRemoval === false) {\n      return <button className=\"Track-action\" onClick={this.addTrack}>+</button>;\n    }\n  }\n\n  addTrack() {\n    this.props.onAdd(this.props.track);\n  }\n\n  removeTrack() {\n    this.props.onRemove(this.props.track);\n  }\n\n   render() {\n    return (\n      <div className=\"Track\">\n        <div className=\"Track-information\">\n          <h3>{this.props.track.name}</h3>\n          <p>{this.props.track.artist} | {this.props.track.album}</p>\n        </div>\n        {this.renderAction()} \n      </div>\n    )\n  }\n}\n\nexport default Track;","import React from 'react';\nimport './TrackList.css';\nimport Track from '../Track/Track';\n\nclass TrackList extends React.Component {\n\n  render() {\n    return (\n      <div className=\"TrackList\">\n          {this.props.tracks.map(track=> {\n            return <Track\n                      track={track}\n                      key={track.id}\n                      onAdd={this.props.onAdd}\n                      onRemove={this.props.onRemove}\n                      isRemoval={this.props.isRemoval}/>; \n          })}\n      </div>\n    )\n  }\n}\n\nexport default TrackList;","import React from 'react';\nimport './SearchResults.css';\nimport TrackList from '../TrackList/TrackList';\n\nclass SearchResults extends React.Component {\n  render() {\n    return (\n      <div className=\"SearchResults\">\n        <h2>Results</h2>\n        <TrackList\n          tracks={this.props.searchResults}\n          onAdd={this.props.onAdd}\n          isRemoval={false} />\n      </div>\n    )\n  }\n}\n\nexport default SearchResults;","import React from 'react';\nimport './Playlist.css';\nimport TrackList from '../TrackList/TrackList';\n\nclass Playlist extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleNameChange = this.handleNameChange.bind(this);\n  } \n\n  handleNameChange(e) {\n    this.props.onNameChange(e.target.value);\n  }\n\n  render() {\n    return (\n      <div className=\"Playlist\">\n        <input\n          defaultValue={\"New Playlist\"}\n          onChange={this.handleNameChange}/>\n        <TrackList \n          tracks={this.props.playlistTracks}\n          onRemove={this.props.onRemove}\n          isRemoval={true}/>\n        <button\n          className=\"Playlist-save\"\n          onClick={this.props.onSave}>SAVE TO SPOTIFY</button>\n      </div>\n    )\n  }\n}\n\nexport default Playlist;","const clientID = 'aef0f4256419428ea575f355c6402a96';\nconst redirectUri = 'https://landrycarroll-br.github.io/jammming/';\nlet accessToken = '';\n\nconst Spotify = {\n  getAccessToken() {\n    if (accessToken) {\n      return accessToken;\n    }\n\n    // check for access token match\n    const accessTokenMatch = window.location.href.match(/access_token=([^&]*)/);\n    const expiresInMatch = window.location.href.match(/expires_in=([^&]*)/);\n\n    if (accessTokenMatch && expiresInMatch) {\n      accessToken = accessTokenMatch[1];\n      const expiresIn = Number(expiresInMatch[1]);\n\n      // clear parameters\n      window.setTimeout(() => accessToken = '', expiresIn * 1000);\n      window.history.pushState('Access Token', null, '/');\n      return accessToken;\n    } else {\n      const accessUrl = `https://accounts.spotify.com/authorize?client_id=${clientID}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectUri}`;\n      window.location = accessUrl;\n    }\n  },\n\n  search(term) {\n    const accessToken = Spotify.getAccessToken();\n    return fetch(`https://api.spotify.com/v1/search?type=track&q=${term}`, {\n      headers: {\n        Authorization: `Bearer ${accessToken}`\n      }\n    }).then(response => {\n      return response.json();\n    }).then(jsonResponse => {\n      if (!jsonResponse.tracks) {\n        return [];\n      }\n      return jsonResponse.tracks.items.map(track => ({\n        id: track.id,\n        name: track.name,\n        artist: track.artists[0].name,\n        album: track.album.name,\n        uri: track.uri\n      }));\n    });\n  },\n\n  savePlaylist(name, trackUris) {\n    if (!name || !trackUris.length) {\n      return;\n    }\n\n    const accessToken = Spotify.getAccessToken();\n    const headers = { Authorization: `Bearer ${accessToken}` }\n    let userId;\n\n    return fetch('https://api.spotify.com/v1/me', { headers: headers }\n    ).then(response => response.json()\n    ).then(jsonResponse => {\n      userId = jsonResponse.id;\n      return fetch(`https://api.spotify.com/v1/users/${userId}/playlists`,\n        {\n          headers: headers,\n          method: 'POST',\n          body: JSON.stringify({ name: name })\n        }).then(response => response.json()\n        ).then(jsonResponse => {\n          const playlistId = jsonResponse.id;\n          return fetch(`https://api.spotify.com/v1/users/${userId}/playlists/${playlistId}/tracks`, {\n            headers: headers,\n            method: 'POST',\n            body: JSON.stringify({ uris: trackUris })\n          })\n        })\n    })\n  }\n}\n\nexport default Spotify;","import React from 'react';\nimport './App.css';\nimport SearchBar from '../SearchBar/SearchBar';\nimport SearchResults from '../SearchResults/SearchResults';\nimport Playlist from '../Playlist/Playlist';\nimport Spotify from '../../util/Spotify';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchResults: [],\n      playlistName: 'My Playlist',\n      playlistTracks: [],\n    }\n\n    this.addTrack = this.addTrack.bind(this);\n    this.removeTrack = this.removeTrack.bind(this);\n    this.updatePlaylistName = this.updatePlaylistName.bind(this);\n    this.savePlaylist = this.savePlaylist.bind(this);\n    this.search = this.search.bind(this);\n  }\n\n  addTrack(track) {\n    let tracks = this.state.playlistTracks;\n    if(tracks.find(savedTrack => savedTrack.id === track.id)) {\n      return;\n    }\n\n    tracks.push(track);\n    this.setState({ playlistTracks: tracks });\n  }\n\n  removeTrack(track) {\n    let tracks = this.state.playlistTracks;\n    tracks = tracks.filter(currentTrack => currentTrack.id !== track.id)\n\n    this.setState({ playlistTracks: tracks });\n  }\n\n  updatePlaylistName(name) {\n    this.setState({playlistName: name});\n  }\n\n  savePlaylist() {\n    const trackUris = this.state.playlistTracks.map(track=> track.uri);\n    Spotify.savePlaylist(this.state.playlistName, trackUris).then(() => {\n      this.setState({\n        playlistName: 'New Playlist',\n        playlistTracks: []\n      })\n    });\n  }\n\n  search(term) {\n    Spotify.search(term).then(searchResults => {\n      this.setState({searchResults: searchResults}); \n    });\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Ja<span className=\"highlight\">mmm</span>ing</h1>\n        <div className=\"App\">\n          <SearchBar onSearch={this.search}/>\n          <div className=\"App-playlist\">\n            <SearchResults\n              searchResults={this.state.searchResults}\n              onAdd={this.addTrack}/>\n            <Playlist\n              playlistName = {this.state.playlistName}\n              playlistTracks={this.state.playlistTracks}\n              onRemove={this.removeTrack}\n              onNameChange={this.updatePlaylistName}\n              onSave={this.savePlaylist} />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from '../src/Components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}